name: Release tunnel package
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read
on:
  pull_request:
    branches: [ "main" ]
    paths:
      - '.github/workflows/release_tunnel.yml'
  push:
    branches: [ "main" ]
    paths:
      - '.github/workflows/release_tunnel.yml'
      - 'tools/awps-tunnel/server/package.json'
      - 'tools/awps-tunnel/server/CHANGELOG.md'
jobs: 
  # Testing tag feature, to be deleted later
  tag:
    runs-on: ubuntu-latest
    environment: Tag
    permissions:
      contents: write
    env: 
      release_tag: release/awps-tunnel/v1.0.0-beta.8
      package_path: package.json
    steps:
    - name: Check if tag exists
      id: check_tag
      run: |
        if git rev-parse "refs/tags/$release_tag" >/dev/null 2>&1; then
          echo "Tag already exists."
          echo "tag_exists=true" >> $GITHUB_ENV
        else
          echo "tag_exists=false" >> $GITHUB_ENV
        fi
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Create and push release tag
      if: steps.check_tag.outputs.tag_exists == 'false'
      run: |
        git config --global user.name "Actions robot"
        git config --global user.email "github-actions-robot@github.com"
        git tag $release_tag
        git push origin $release_tag
  pr_update_version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env: 
      release_tag: release/awps-tunnel/v1.0.0-beta.8
      package_path: package.json
    steps:
    - name: Update package.json to next beta version
      id: new_version
      run: |
        CURRENT_VERSION=$(jq -r '.version' $package_path)
        if [[ "$CURRENT_VERSION" =~ -beta ]]; then
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F- -v OFS=- '{split($2,a,".");$2="beta."a[2]+1;print $1,$2}')
        else
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{print $1,$2,$3+1"-beta.1"}')
        fi
        BRANCH_NAME=auto/update-package-version-$NEW_VERSION
        echo $NEW_VERSION
        echo $BRANCH_NAME
        echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
    - name: Push changes
      run: |
        jq ".version = \"$NEW_VERSION\"" $package_path> tmp.json && mv tmp.json $package_path
        git status
        git config --global user.name "Actions robot"
        git config --global user.email "github-actions-robot@github.com"
        git add $package_path
        git commit -m "Update $package_path to next beta version"
        git log -2
        git push origin HEAD:refs/heads/${{steps.new_version.outputs.branch}}

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{steps.new_version.outputs.branch}}
        base: main
        commit-message: Update package.json to next beta version 
        title: Update package.json to next beta version ${{steps.new_version.outputs.version}}
        body: This PR updates the package.json version to the next beta version.
        labels: 'release, beta'
  release:
    if: false
    uses: ./.github/workflows/workflow-call-release-package.yml
    secrets:
      AZURESDKPARTNERDROPS_URL: ${{ secrets.AZURESDKPARTNERDROPS_URL }}
      AZURESDKPARTNERDROPS_CLIENT_ID: ${{ secrets.AZURESDKPARTNERDROPS_CLIENT_ID }}
      AZURESDKPARTNERDROPS_SUBSCRIPTION_ID: ${{ secrets.AZURESDKPARTNERDROPS_SUBSCRIPTION_ID }}
      AZURESDKPARTNERDROPS_TENANT_ID: ${{ secrets.AZURESDKPARTNERDROPS_TENANT_ID }}
    with:
      package_name: awps-tunnel
      package_folder: tools/awps-tunnel/server