# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Integration tests for Python

on:
  workflow_dispatch:
    inputs:
      web_pubsub_connection_string:
        description: 'Azure Web PubSub Connection String'
        required: true
        type: string
  push:
    branches: [ "main" ]
    paths:
      - 'tests/integration-tests/python/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'tests/integration-tests/python/**'

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      WEB_PUBSUB_CONNECTION_STRING: ${{ github.event.inputs.web_pubsub_connection_string || secrets.WEB_PUBSUB_CONNECTION_STRING }}
    strategy:
      matrix:
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Run tests
      run: |
        cd tests/integration-tests/python
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pytest
  post-test:
    runs-on: ubuntu-latest
    needs: test
    if: failure()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download test output
        uses: actions/download-artifact@v3
        with:
          name: test-output
          path: ./test-output
      - name: Read test output
        id: read-test-output
        run: echo "TEST_OUTPUT=$(cat ./test-output/test-output.txt)" >> $GITHUB_ENV
      - name: Fix error with deep prompt
        run: |
          node eng/copilot/fixError.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          API_KEY: ${{ secrets.OPENAI_API_KEY }}
          API_BASE: ${{ secrets.OPENAI_API_BASE }}
          PR_ID: ${{ github.event.pull_request.number }}
          TEST_OUTPUT: ${{ env.TEST_OUTPUT }}