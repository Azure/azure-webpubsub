# Partially based on https://github.com/dotnet/roslyn/blob/main/.editorconfig

# Top most EditorConfig file
root=true

[*.cs]
# Indentation and spacing
indent_style = space
indent_size = 4


###### Diagnostic severity settings

# Simplify name
dotnet_diagnostic.IDE0001.severity = warning

# Simplify member access
dotnet_diagnostic.IDE0002.severity = warning

# Remove this or Me qualification
dotnet_diagnostic.IDE0003.severity = warning
# dotnet_style_qualification_for_field
# dotnet_style_qualification_for_property
# dotnet_style_qualification_for_method
# dotnet_style_qualification_for_event

# Remove unnecessary cast
dotnet_diagnostic.IDE0004.severity = warning

# Remove unnecessary import
dotnet_diagnostic.IDE0005.severity = warning

# Use var instead of explicit type
dotnet_diagnostic.IDE0007.severity = warning
# csharp_style_var_for_built_in_types
# csharp_style_var_when_type_is_apparent
# csharp_style_var_elsewhere

# Use explicit type instead of var
dotnet_diagnostic.IDE0008.severity = warning
# csharp_style_var_for_built_in_types
# csharp_style_var_when_type_is_apparent
# csharp_style_var_elsewhere

# Add this or Me qualification
dotnet_diagnostic.IDE0009.severity = warning
# dotnet_style_qualification_for_field
# dotnet_style_qualification_for_property
# dotnet_style_qualification_for_method
# dotnet_style_qualification_for_event

# Add missing cases to switch statement
dotnet_diagnostic.IDE0010.severity = warning

# Add braces
dotnet_diagnostic.IDE0011.severity = none
csharp_prefer_braces = false:warning

# Use throw expression
dotnet_diagnostic.IDE0016.severity = warning
# csharp_style_throw_expression

# Use object initializers
# dotnet_style_object_initializer
dotnet_diagnostic.IDE0017.severity = warning

# Inline variable declaration
dotnet_diagnostic.IDE0018.severity = warning
# csharp_style_inlined_variable_declaration

# Use pattern matching to avoid as followed by a null check
dotnet_diagnostic.IDE0019.severity = warning
# csharp_style_pattern_matching_over_as_with_null_check

# Use pattern matching to avoid is check followed by a cast (with variable)
dotnet_diagnostic.IDE0020.severity = warning
# csharp_style_pattern_matching_over_is_with_cast_check

# Use expression body for constructors
dotnet_diagnostic.IDE0021.severity = warning
# csharp_style_expression_bodied_constructors

# Use expression body for methods
dotnet_diagnostic.IDE0022.severity = silent
# csharp_style_expression_bodied_methods

# Use expression body for conversion operators
dotnet_diagnostic.IDE0023.severity = warning
# csharp_style_expression_bodied_operators

# Use expression body for operators
dotnet_diagnostic.IDE0024.severity = warning
# csharp_style_expression_bodied_operators

# Use expression body for properties
dotnet_diagnostic.IDE0025.severity = warning
# csharp_style_expression_bodied_properties

# Use expression body for indexers
dotnet_diagnostic.IDE0026.severity = warning
# csharp_style_expression_bodied_indexers

# Use expression body for accessors
dotnet_diagnostic.IDE0027.severity = warning
# csharp_style_expression_bodied_accessors

# Use collection initializers
dotnet_diagnostic.IDE0028.severity = warning
# dotnet_style_collection_initializer

# Use coalesce expression (non-nullable types)
# dotnet_style_coalesce_expression
dotnet_diagnostic.IDE0029.severity = suggestion

# Use coalesce expression (nullable types)
dotnet_diagnostic.IDE0030.severity = suggestion
# dotnet_style_coalesce_expression

# Use null propagation
dotnet_diagnostic.IDE0031.severity = warning
# dotnet_style_null_propagation

# Use auto property
dotnet_diagnostic.IDE0032.severity = warning
# dotnet_style_prefer_auto_properties

# Use explicitly provdotnet_diagnostic.ided.severity = warning # tuple name
dotnet_diagnostic.IDE0033.severity = warning
# dotnet_style_explicit_tuple_names

# Simplify default expression
dotnet_diagnostic.IDE0034.severity = warning
# csharp_prefer_simple_default_expression

# Remove unreachable code
dotnet_diagnostic.IDE0035.severity = warning

# Order modifiers
dotnet_diagnostic.IDE0036.severity = warning
# csharp_preferred_modifier_order
# visual_basic_preferred_modifier_order

# Use inferred member name
dotnet_diagnostic.IDE0037.severity = warning
# dotnet_style_prefer_inferred_tuple_names
# dotnet_style_prefer_inferred_anonymous_type_member_names

# Use pattern matching to avoid is check followed by a cast (without variable)
dotnet_diagnostic.IDE0038.severity = warning
# csharp_style_pattern_matching_over_is_with_cast_check

# Use local function instead of lambda
dotnet_diagnostic.IDE0039.severity = warning
# csharp_style_pattern_local_over_anonymous_function

# Add accessibility modifiers
dotnet_diagnostic.IDE0040.severity = warning
# dotnet_style_require_accessibility_modifiers

# Use is null check
dotnet_diagnostic.IDE0041.severity = warning
# dotnet_style_prefer_is_null_check_over_reference_equality_method

# Deconstruct variable declaration
dotnet_diagnostic.IDE0042.severity = warning
# csharp_style_deconstructed_variable_declaration

# Add readonly modifier
dotnet_diagnostic.IDE0044.severity = warning
dotnet_style_readonly_field = false

# Use conditional expression for assignment
dotnet_diagnostic.IDE0045.severity = warning
# dotnet_style_prefer_conditional_expression_over_assignment

# Use conditional expression for return
dotnet_diagnostic.IDE0046.severity = warning
# dotnet_style_prefer_conditional_expression_over_return

# Remove unnecessary parentheses
dotnet_diagnostic.IDE0047.severity = warning
# dotnet_style_parentheses_in_arithmetic_binary_operators
# dotnet_style_parentheses_in_relational_binary_operators
# dotnet_style_parentheses_in_other_binary_operators
# dotnet_style_parentheses_in_other_operators

# Add parentheses for clarity
dotnet_diagnostic.IDE0048.severity = warning
# dotnet_style_parentheses_in_arithmetic_binary_operators
# dotnet_style_parentheses_in_relational_binary_operators
# dotnet_style_parentheses_in_other_binary_operators
# dotnet_style_parentheses_in_other_operators

# Use language keywords instead of framework type names for type references
dotnet_diagnostic.IDE0049.severity = warning
# dotnet_style_predefined_type_for_locals_parameters_members
# dotnet_style_predefined_type_for_member_access

# Convert anonymous type to tuple
dotnet_diagnostic.IDE0050.severity = warning

# Remove unused private member
dotnet_diagnostic.IDE0051.severity = none

# Remove unread private member
dotnet_diagnostic.IDE0052.severity = warning

# Use expression body for lambdas
dotnet_diagnostic.IDE0053.severity = warning
# csharp_style_expression_bodied_lambdas

# Use compound assignment
dotnet_diagnostic.IDE0054.severity = warning
# dotnet_style_prefer_compound_assignment

# Fix formatting
dotnet_diagnostic.IDE0055.severity = warning
dotnet_style_namespace_match_folder = false

# Use index operator
dotnet_diagnostic.IDE0056.severity = warning
# csharp_style_prefer_index_operator

# Use range operator
dotnet_diagnostic.IDE0057.severity = warning
# csharp_style_prefer_range_operator

# Remove unused expression value
dotnet_diagnostic.IDE0058.severity = warning
# csharp_style_unused_value_expression_statement_preference
# visual_basic_style_unused_value_expression_statement_preference

# Remove unnecessary value assignment
dotnet_diagnostic.IDE0059.severity = warning
# csharp_style_unused_value_assignment_preference
# visual_basic_style_unused_value_assignment_preference

# Remove unused parameter
dotnet_diagnostic.IDE0060.severity = silent
# dotnet_code_quality_unused_parameters

# Use expression body for local functions
dotnet_diagnostic.IDE0061.severity = warning
# csharp_style_expression_bodied_local_functions

# Make local function static
dotnet_diagnostic.IDE0062.severity = warning
# csharp_prefer_static_local_function

# Use simple using statement
dotnet_diagnostic.IDE0063.severity = warning
# csharp_prefer_simple_using_statement

# Make struct fields writable
dotnet_diagnostic.IDE0064.severity = warning

# Using directive placement
dotnet_diagnostic.IDE0065.severity = warning
# csharp_using_directive_placement

# Use switch expression
dotnet_diagnostic.IDE0066.severity = warning
# csharp_style_prefer_switch_expression

# Use System.HashCode.Combine
dotnet_diagnostic.IDE0070.severity = warning

# Simplify interpolation
dotnet_diagnostic.IDE0071.severity = warning
# dotnet_style_prefer_simplified_interpolation

# Add missing cases to switch expression
dotnet_diagnostic.IDE0072.severity = warning

# Use file header
dotnet_diagnostic.IDE0073.severity = warning
# file_header_template

# Use coalesce compound assignment
dotnet_diagnostic.IDE0074.severity = warning
# dotnet_style_prefer_compound_assignment

# Simplify conditional expression
dotnet_diagnostic.IDE0075.severity = warning
# dotnet_style_prefer_simplified_boolean_expressions

# Remove invalid global SuppressMessageAttribute
dotnet_diagnostic.IDE0076.severity = warning

# Avoid legacy format target in global SuppressMessageAttribute
dotnet_diagnostic.IDE0077.severity = warning

# Use pattern matching
dotnet_diagnostic.IDE0078.severity = warning
# csharp_style_prefer_pattern_matching

# Remove unnecessary suppression
dotnet_diagnostic.IDE0079.severity = warning
# dotnet_remove_unnecessary_suppression_exclusions

# Remove unnecessary suppression operator
dotnet_diagnostic.IDE0080.severity = warning

# Remove ByVal
dotnet_diagnostic.IDE0081.severity = warning

# Convert typeof to nameof
dotnet_diagnostic.IDE0082.severity = warning

# Use pattern matching (not operator)
dotnet_diagnostic.IDE0083.severity = warning
# csharp_style_prefer_not_pattern

# Use pattern matching (IsNot operator)
dotnet_diagnostic.IDE0084.severity = warning
# visual_basic_style_prefer_isnot_expression

# Simplify new expression
dotnet_diagnostic.IDE0090.severity = warning
csharp_style_implicit_object_creation_when_type_is_apparent = true

# Remove unnecessary equality operator
dotnet_diagnostic.IDE0100.severity = warning

# Remove unnecessary discard
dotnet_diagnostic.IDE0110.severity = warning

# Simplify object creation
dotnet_diagnostic.IDE0140.severity = warning
# visual_basic_style_prefer_simplified_object_creation

# Use conditional delegate call
dotnet_diagnostic.IDE1005.severity = warning
# csharp_style_conditional_delegate_call

# Naming styles
dotnet_diagnostic.IDE1006.severity = warning



###### Style settings

# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false
# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Suggest more modern language features when available
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion

# Whitespace options
dotnet_style_allow_multiple_blank_lines_experimental = false

# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static

dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case


# Constants are UPPER_CASE
dotnet_naming_rule.constants_should_be_upper_case.severity = suggestion
dotnet_naming_rule.constants_should_be_upper_case.symbols = constants
dotnet_naming_rule.constants_should_be_upper_case.style = constants

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constants.capitalization = all_upper

# Static fields are camelCase and start with s_
dotnet_naming_rule.static_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_camel_case.style = static_field_style

dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_style.static_field_style.capitalization = camel_case
dotnet_naming_style.static_field_style.required_prefix = s_

# Instance fields are camelCase and start with m_
dotnet_naming_rule.instance_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style

dotnet_naming_symbols.instance_fields.applicable_kinds = field

dotnet_naming_style.instance_field_style.capitalization = camel_case
dotnet_naming_style.instance_field_style.required_prefix = m_

# Instance public fields are PascalCase
dotnet_naming_rule.instance_public_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.instance_public_fields_should_be_pascal_case.symbols = instance_public_fields
dotnet_naming_rule.instance_public_fields_should_be_pascal_case.style = instance_public_field_style

dotnet_naming_symbols.instance_public_fields.applicable_kinds = field
dotnet_naming_symbols.instance_public_fields.applicable_accessibilities = public

dotnet_naming_style.instance_public_field_style.capitalization = pascal_case

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = suggestion
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local

dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_style.local_function_style.capitalization = pascal_case

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# CSharp code style settings:
# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Whitespace options
csharp_style_allow_embedded_statements_on_same_line_experimental = false
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false

# Prefer "var" everywhere
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:warning

# Prefer expression body on single line
csharp_style_expression_bodied_methods = when_on_single_line
csharp_style_expression_bodied_constructors = when_on_single_line
csharp_style_expression_bodied_operators = when_on_single_line
csharp_style_expression_bodied_properties = when_on_single_line
csharp_style_expression_bodied_indexers = when_on_single_line
csharp_style_expression_bodied_accessors = when_on_single_line
csharp_style_expression_bodied_local_functions = when_on_single_line

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Blocks are allowed
csharp_prefer_braces = true:silent
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

# Wrapping
csharp_wrap_before_comma = false
csharp_continuous_indent_multiplier = 1
csharp_alignment_tab_fill_style = use_tabs_only
csharp_allow_far_alignment = false

# Parentheses
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:silent
# dotnet_style_parentheses_in_relational_binary_operators
# dotnet_style_parentheses_in_other_binary_operators
# dotnet_style_parentheses_in_other_operators


###### Ignored folders

[Assets/TextMesh Pro/**]
generated_code = true

[Assets/Oculus/**]
generated_code = true

[Packages/**]
generated_code = true
dotnet_diagnostic.IDE0005.severity = none

[Packages/com.meta.utilities/**]
generated_code = false

[Packages/com.meta.utilities.input/**]
generated_code = false

[Assets/SharedSpaces/**.cs]
generated_code = true

[Library/**]
generated_code = true

[Assets/Interaction URP/**]
generated_code = true

# Since the file is a copy from Oculus/* we only want to have the related changes
# and no formatting changes
[**/CustomControllerRayVisual.cs]
generated_code = true

# File is based on com.unity.inputsystem/InputSystem/Actions/Composites/OneModifierComposite.cs
[**/InverseModifierComposite.cs]
generated_code = true